91, 97, 89,
83, 93, 73,
85, 94, 70,
80, 90, 61,
95, 100, 90)
singer <- c(rep(1:11, each = 3))
judge <- c(rep(c("a", "b", "c"), 11))
df <- data.frame(score, singer, judge)
matrix(,
nrow = 11,
byrow = TRUE,
dimnames = list(1 : 11,
c("A", "B", "C")))
install.packages("reshape")
library(reshape)
score <- c(74, 88, 50,
85, 87, 54,
89, 93, 67,
90, 96, 85,
92, 99, 92,
85, 92, 66,
91, 97, 89,
83, 93, 73,
85, 94, 70,
80, 90, 61,
95, 100, 90)
singer <- c(rep(1:11, each = 3))
judge <- c(rep(c("a", "b", "c"), 11))
df <- data.frame(score, singer, judge)
install.packages("reshape")
score <- c(74, 88, 50,
85, 87, 54,
89, 93, 67,
90, 96, 85,
92, 99, 92,
85, 92, 66,
91, 97, 89,
83, 93, 73,
85, 94, 70,
80, 90, 61,
95, 100, 90)
singer <- c(rep(1:11, each = 3))
judge <- c(rep(c("a", "b", "c"), 11))
df <- data.frame(score, singer, judge)
View(df)
out <- aov(score~judge, data = df)
shapiro.test(resid(out))
boxplot(score~judge, data=df)
boxplot(score~judge, data=df)
friedman.test(df)
scores <-
matrix(c(74, 88, 50,
85, 87, 54,
89, 93, 67,
90, 96, 85,
92, 99, 92,
85, 92, 66,
91, 97, 89,
83, 93, 73,
85, 94, 70,
80, 90, 61,
95, 100, 90),
nrow = 11,
byrow = TRUE,
dimnames = list(1 : 11,
c("A", "B", "C")))
friedman.test(scores)
value <- c(8.0, 8.7, 8.8, 9.3, 9.7, 9.9, 10.0, 10.1, 10.6, 11.3, 6.1, 7.8, 8.1, 8.9, 9.0, 10.4, 10.5, 10.7, 10.8, 13.7)
label <- rep(c("treatment1", "treatment2"), each = 10)
df <- data.frame(value, label)
x <- with(df, value[label=="treatment1"])
y <- with(df, value[label=="treatment2"])
mean(x); mean(y)
m <- length(df$value[df$label=="treatment1"]); m
n <- length(df$value[df$label=="treatment2"]); n
N <- m + n
df <- df[order(df$value), ]
rank.st <- c(1, 4, 5, 8, 9, 12, 13, 16, 17, 20, 19, 18, 15, 14, 11, 10, 7, 6, 3, 2)
rank.ab <- c(seq(1:10), seq(from = 10, to = 1))
dev <- ifelse(df$label == "treatment1", abs(df$value - mean(x)), abs(df$value - mean(y)))
df[, "rank_st"] <- rank.st
df[, "rank_ab"] <- rank.ab
df[, "dev"] <- dev
D.observed <- with(df, mean(rank.st[label=="treatment1"])-mean(rank.st[label=="treatment2"]))
D2.observed <- with(df, mean(rank.ab[label=="treatment1"])-mean(rank.ab[label=="treatment2"]))
D3.observed <- with(df, mean(df$dev[label=="treatment1"]) / mean(df$dev[label=="treatment2"]))
B <- 10000
set.seed(0318)
# permutation for st test
D <- numeric()
for (i in 1:B) {
rand.id <- sample(1:N, m, replace=FALSE)
t1.st.permuted <- df$rank_st[rand.id]
t2.st.permuted <- df$rank_st[-rand.id]
D[i] <- mean(t1.st.permuted) - mean(t2.st.permuted)
}
# permutation for ab test
D2 <- numeric()
for (i in 1:B) {
rand.id <- sample(1:N, m, replace=FALSE)
t1.ab.permuted <- df$rank_ab[rand.id]
t2.ab.permuted <- df$rank_ab[-rand.id]
D2[i] <- mean(t1.ab.permuted) - mean(t2.ab.permuted)
}
# permutation for rmd test
D3 <- numeric()
for (i in 1:B) {
rand.id <- sample(1:N, m, replace=FALSE)
t1.rmd.permuted <- df$dev[rand.id]
t2.rmd.permuted <- df$dev[-rand.id]
D3[i] <- mean(t1.rmd.permuted)/mean(t2.rmd.permuted)
}
# pvalue
pvalue.st <- 2*(sum(D >= D.observed))/B
pvalue.ab <- 2*(sum(D2 >= D2.observed))/B
pvalue.rmd <- 2*min( c(sum(D3 >= D3.observed)/B, sum(D3 <= D3.observed)/B) )
pvalue.st ; pvalue.ab ; pvalue.rmd
D >= D.observed
sum(D >= D.observed)
value <- c(8.0, 8.7, 8.8, 9.3, 9.7, 9.9, 10.0, 10.1, 10.6, 11.3, 6.1, 7.8, 8.1, 8.9, 9.0, 10.4, 10.5, 10.7, 10.8, 13.7)
label <- rep(c("treatment1", "treatment2"), each = 10)
df <- data.frame(value, label)
x <- with(df, value[label=="treatment1"])
y <- with(df, value[label=="treatment2"])
mean(x); mean(y)
m <- length(df$value[df$label=="treatment1"]); m
n <- length(df$value[df$label=="treatment2"]); n
N <- m + n
df <- df[order(df$value), ]
rank.st <- c(1, 4, 5, 8, 9, 12, 13, 16, 17, 20, 19, 18, 15, 14, 11, 10, 7, 6, 3, 2)
rank.ab <- c(seq(1:10), seq(from = 10, to = 1))
dev <- ifelse(df$label == "treatment1", abs(df$value - mean(x)), abs(df$value - mean(y)))
df[, "rank_st"] <- rank.st
df[, "rank_ab"] <- rank.ab
df[, "dev"] <- dev
DescTools::SiegelTukeyTest(x,y)
ansari.test(x,y) # equal location
pvalue.st <- 2*(sum(D >= D.observed))/B
pvalue.ab <- 2*(sum(D2 >= D2.observed))/B
pvalue.rmd <- 2*min( c(sum(D3 >= D3.observed)/B, sum(D3 <= D3.observed)/B) )
sum(D >= D.observed)
pvalue.st ; pvalue.ab ; pvalue.rmd
D.observed; D2.observed; D3.observed
pvalue.st <- 2*(sum(D >= D.observed))/B
pvalue.ab <- 2*(sum(D2 >= D2.observed))/B
pvalue.rmd <- 2*min( c(sum(D3 >= D3.observed)/B, sum(D3 <= D3.observed)/B) )
pvalue.st ; pvalue.ab ; pvalue.rmd
value <- c(1.69, -0.90, 2.75, 0.51, 1.12, 2.33, 2.15, -0.39, 1.29, 2.25, 2.46, 2.43, 2.22, 2.96, 1.48)
label <- rep(c("t1", "t2", "t3"), each = 5)
df <- data.frame(value, label)
kruskal.test(value ~ label, data=df)
df[, "rank"] <- rank(df$value)
View(df)
value <- c(1.69, -0.90, 2.75, 0.51, 1.12, 2.33, 2.15, -0.39, 1.29, 2.25, 2.46, 2.43, 2.22, 2.96, 1.48)
label <- rep(c("t1", "t2", "t3"), each = 5)
df <- data.frame(value, label)
df[, "rank"] <- rank(df$value)
group.value <- aggregate(rank ~ label, data=df, value)[,2]
value <- c(1.69, -0.90, 2.75, 0.51, 1.12, 2.33, 2.15, -0.39, 1.29, 2.25, 2.46, 2.43, 2.22, 2.96, 1.48)
label <- rep(c("t1", "t2", "t3"), each = 5)
df <- data.frame(value, label)
df[, "rank"] <- rank(df$value)
group.value <- aggregate(rank ~ label, data=df, value)[,2]
value <- c(1.69, -0.90, 2.75, 0.51, 1.12, 2.33, 2.15, -0.39, 1.29, 2.25, 2.46, 2.43, 2.22, 2.96, 1.48)
label <- rep(c("t1", "t2", "t3"), each = 5)
df <- data.frame(value, label)
df[, "rank"] <- rank(df$value)
group.value <- aggregate(rank ~ label, data=df, value)[,2]
group.value <- aggregate(rank ~ label, data=df, length)[,2]
value <- c(1.69, -0.90, 2.75, 0.51, 1.12, 2.33, 2.15, -0.39, 1.29, 2.25, 2.46, 2.43, 2.22, 2.96, 1.48)
label <- rep(c("t1", "t2", "t3"), each = 5)
df <- data.frame(value, label)
df[, "rank"] <- rank(df$value)
group.value <- aggregate(rank ~ label, data=df, length)[,2]
group.rank.mean <- aggregate(rank ~ label, data=df, mean)[,2]
N <- sum(group.value); K <- length(group.value)
KW.obs <- ( 12/(N*(N+1))) * sum( group.value * (group.rank.mean - (N+1)/2)^2 )
KW.obs
kruskal.test(value ~ label, data=df)
value <- c(1.69, -0.90, 2.75, 0.51, 1.12, 2.33, 2.15, -0.39, 1.29, 2.25, 2.46, 2.43, 2.22, 2.96, 1.48)
label <- rep(c("t1", "t2", "t3"), each = 5)
df <- data.frame(value, label)
df[, "rank"] <- rank(df$value)
group.value <- aggregate(rank ~ label, data=df, length)[,2]
group.rank.mean <- aggregate(rank ~ label, data=df, mean)[,2]
N <- sum(group.value); K <- length(group.value)
KW.obs <- ( 12/(N*(N+1))) * sum( group.value * (group.rank.mean - (N+1)/2)^2 )
KW.obs
qchisq(p = 0.05, df = 2, lower.tail = FALSE)
kruskal.test(value ~ label, data=df)
outer(df$value[label=="t1"], df$value[label=="t2"])
outer(df$value[label=="t1"], df$value[label=="t2"], ">")
outer(df$value[label=="t1"], df$value[label=="t2"], "<")
sum(outer(df$value[label=="t1"], df$value[label=="t2"], "<"))
sum(outer(df$value[label=="t2"], df$value[label=="t3"], "<"))
df$label <- factor(df$label, ordered=TRUE)
# exact test
DescTools::JonckheereTerpstraTest(value ~ label, data=df, alternative="increasing")
```{r}
```{r}
sum(outer(df$value[label=="t1"], df$value[label=="t2"], "<"))
sum(outer(df$value[label=="t1"], df$value[label=="t2"], "<"))
sum(outer(df$value[label=="t2"], df$value[label=="t3"], "<"))
sum(outer(df$value[label=="t1"], df$value[label=="t3"], "<"))
sum(outer(df$value[label=="t1"], df$value[label=="t2"], "<"))
sum(outer(df$value[label=="t1"], df$value[label=="t3"], "<"))
sum(outer(df$value[label=="t2"], df$value[label=="t3"], "<"))
sum(sum(outer(df$value[label=="t1"], df$value[label=="t2"], "<")), sum(outer(df$value[label=="t1"], df$value[label=="t3"], "<")),
sum(outer(df$value[label=="t2"], df$value[label=="t3"], "<")))
# exact test
DescTools::JonckheereTerpstraTest(value ~ label, data=df, alternative="increasing")$mean
# exact test
DescTools::JonckheereTerpstraTest(value ~ label, data=df, alternative="increasing")$variance
(15^2-3*5^2)/4
var.jt <- (15^2(30+3) - 3*25*13)/72
jt<-sum(sum(outer(df$value[label=="t1"], df$value[label=="t2"], "<")), sum(outer(df$value[label=="t1"], df$value[label=="t3"], "<")),
sum(outer(df$value[label=="t2"], df$value[label=="t3"], "<")))
e.jt <- (15^2-3*5^2)/4
var.jt <- (15^2(30+3) - 3*25*13)/72
var.jt <- (15^2*(30+3) - 3*25*13)/72
var.jt <- (15^2*(30+3) - 3*25*13)/72
z.jt <- (jt-e.jt)/sqrt(var.jt)
z.jt
df$label <- factor(df$label, ordered=TRUE)
# exact test
DescTools::JonckheereTerpstraTest(value ~ label, data=df, alternative="increasing")$variance
df$label <- factor(df$label, ordered=TRUE)
# exact test
DescTools::JonckheereTerpstraTest(value ~ label, data=df, alternative="increasing")
means <- c(mean(df$value[label == "t1"]),mean(df$value[label == "t2"]), mean(df$value[label == "t3"]))
diff.means <- abs(outer(means, means, "-"))
diff.means
df <- df %>% mutate(rank=rank(value))
rank.means <- c(mean(df$rank[label == "t1"]),mean(df$rank[label == "t2"]), mean(df$rank[label == "t3"]))
diff.rank.means <- abs(outer(rank.means, rank.means, "-"))
diff.rank.means
model <- aov(value ~ label, data=df)
model
(SSE <- deviance(model))
(MSE <- deviance(model)/df.residual(model))
means <- c(mean(df$value[label == "t1"]),mean(df$value[label == "t2"]), mean(df$value[label == "t3"]))
diff.means <- abs(outer(means, means, "-"))
diff.means
df <- df %>% mutate(rank=rank(value))
rank.means <- c(mean(df$rank[label == "t1"]),mean(df$rank[label == "t2"]), mean(df$rank[label == "t3"]))
diff.rank.means <- abs(outer(rank.means, rank.means, "-"))
diff.rank.means
model <- aov(value ~ label, data=df)
model
(SSE <- deviance(model))
(MSE <- deviance(model)/df.residual(model))
q2<- 3.31
qrank <- q*sqrt((15*16)/(12*5))
diff.rank.means >= qmse
q <- 3.77
qmse <- q*sqrt(MSE/5)
diff.means >= qmse
q <- 3.77
(qmse <- q*sqrt(MSE/5))
diff.means >= qmse
q2<- 3.31
(qrank <- q*sqrt((15*16)/(12*5)))
diff.rank.means >= qmse
q2<- 3.31
(qrank <- q*sqrt((15*16)/(12*5)))
diff.rank.means >= qmse
q2<- 3.31
(qrank <- q*sqrt((15*16)/(12*5)))
diff.rank.means >= qrank
q <- 3.77
(qmse <- q*sqrt(MSE/5))
diff.means >= qmse
q2<- 3.31
(qrank <- q2*sqrt((15*16)/(12*5)))
diff.rank.means >= qrank
q <- 3.77
(qmse <- q*sqrt(MSE/5))
diff.means >= qmse
score <- c(74, 88, 50,
85, 87, 54,
89, 93, 67,
90, 96, 85,
92, 99, 92,
85, 92, 66,
91, 97, 89,
83, 93, 73,
85, 94, 70,
80, 90, 61,
95, 100, 90)
singer <- c(rep(1:11, each = 3))
judge <- c(rep(c("a", "b", "c"), 11))
df <- data.frame(score, singer, judge)
out <- aov(score~judge, data = df)
friedman.test(df)
scores <-
matrix(c(74, 88, 50,
85, 87, 54,
89, 93, 67,
90, 96, 85,
92, 99, 92,
85, 92, 66,
91, 97, 89,
83, 93, 73,
85, 94, 70,
80, 90, 61,
95, 100, 90),
nrow = 11,
byrow = TRUE,
dimnames = list(1 : 11,
c("A", "B", "C")))
friedman.test(scores)
b <- c(rep(c("t1", "t2", "t3", "t4", each = 4))
b <- c(rep(c("t1", "t2", "t3", "t4"), each = 4))
b <- (rep(c("t1", "t2", "t3", "t4"), each = 4))
b <- rep(c("t1", "t2", "t3", "t4"), each = 4))
b <- rep(c("t1", "t2", "t3", "t4"), each = 4)
a <- (48.0, 58.0, 51.4, 56.5, 51.2, 62.4, 58.5, 61.9, 50.2, 39.8, 45.2, 48.8, 40.8, 41.8, 45.5, 35,9, 30.2, 25.8, 32.4, 29.2)
df <- data.frame(a, b)
a <- (48.0, 58.0, 51.4, 56.5, 51.2, 62.4, 58.5, 61.9, 50.2, 39.8, 45.2, 48.8, 40.8, 41.8, 45.5, 35,9, 30.2, 25.8, 32.4, 29.2)
a <- c(48.0, 58.0, 51.4, 56.5, 51.2, 62.4, 58.5, 61.9, 50.2, 39.8, 45.2, 48.8, 40.8, 41.8, 45.5, 35,9, 30.2, 25.8, 32.4, 29.2)
df <- data.frame(a, b)
aov1 <- aov(a~b)
aov1 <- aov(a~b, data=df)
df <- data.frame(a, b)
b <- rep(c("t1", "t2", "t3", "t4", "t5"), each = 4)
df <- data.frame(a, b)
a <- c(48.0, 58.0, 51.4, 56.5,
51.2, 62.4, 58.5, 61.9,
50.2, 39.8, 45.2, 48.8,
40.8, 41.8, 45.5, 35,9,
30.2, 25.8, 32.4, 29.2)
b <- rep(c("t1", "t2", "t3", "t4", "t5"), each = 4)
df <- data.frame(a, b)
a
length(a)
a <- c(48.0, 58.0, 51.4, 56.5,
51.2, 62.4, 58.5, 61.9,
50.2, 39.8, 45.2, 48.8,
40.8, 41.8, 45.5, 35.9,
30.2, 25.8, 32.4, 29.2)
b <- rep(c("t1", "t2", "t3", "t4", "t5"), each = 4)
df <- data.frame(a, b)
aov1 <- aov(a~b, data=df)
aov1
summary(aov)
summary(aov1)
2048.6/4
coef(aov1)
confint(aov1)
mean(c(48.0, 58.0, 51.4, 56.5)) +qt(0.975, df=15)*sqrt(18.5/4)
mean(c(51.2, 62.4, 58.5, 61.9)) +qt(0.975, df=15)*sqrt(18.5/4)
melt(df)
View(df)
View(aov1)
level <- c(rep(1,5), rep(2,5), rep(3,5))
a <- c(49,73,58,38,42,31,40,43,44,20,46,41,58,31,65)
table <- cbind(level, a)
table <- data.frame(table)
table$con1 <- ifelse(table$level == 1, -1, ifelse(table$level == 2, 0, 1))
table$con2 <- ifelse(table$level == 1, -1, ifelse(table$level == 2, 2, -1))
View(table)
aov1 <- aov(a~level)
summary(aov1)
out1 = lm(a~con1+con2, data = table)
summary(out1)
knitr::opts_chunk$set(echo = TRUE)
group <- c(rep(1,4), rep(2,4), rep(3,4), rep(4,4), rep(5,4))
y<- c(2.4, 2.7, 3.1, 3.1,
0.7, 1.6, 1.7, 1.8,
2.4, 3.1, 5.4, 6.1,
0.3, 0.3, 2.4, 2.7,
0.5, 0.9, 1.4, 2.0)
sol <- cbind(group,y)
sol
group <- as.factor(group)
aov1 <- aov(y~group)
summary(aov1)
plot(y~group)
tapply(y, group, mean)
par(mfrow=c(2,2))
plot(aov1)
bartlett.test(y~group)
tapply(y,group,mean)
pairwise.t.test(y,group,p.adjust="none",pool.sd=TRUE)
pairwise.t.test(y,group,p.adjust="bonferroni",pool.sd=FALSE)
library(agricolae)
aov1<-aov(y~group)
LSD.test(aov1, "group", p.adj="none", main="Y of different groups")
HSD.test(aov1, "group", group=TRUE)
scheffe.test(aov1, "group", group=TRUE, main="Y of different groups")
SNK.test(aov1, "group", main="Y of different groups")
a.tukey <- TukeyHSD(aov1, ordered=TRUE)
a.tukey
plot(a.tukey)
mean(c(51.2, 62.4, 58.5, 61.9), c(51.2, 62.4, 58.5, 61.9), c(50.2, 39.8, 45.2, 48.8), c(30.2, 25.8, 32.4, 29.2)) +qt(0.975, df=15)*sqrt(18.5/4)
c(mean(c(51.2, 62.4, 58.5, 61.9)), mean(c(51.2, 62.4, 58.5, 61.9)), mean(c(50.2, 39.8, 45.2, 48.8)), mean(c(30.2, 25.8, 32.4, 29.2))) +qt(0.975, df=15)*sqrt(18.5/4)
library(tidyverse)
setwd("C:/Workspace/20241/regress")
## -----------------------------------------------------------------------------
deliver <- read.csv("ex3.1.csv")
colnames(deliver) <- c("obs", "time", "case", "distance")
head(deliver)
plot(deliver[,2:4]) # scatterplot matrix
## -----------------------------------------------------------------------------
lmfit.full <- lm(time ~ case + distance, data=deliver)
summary(lmfit.full)
## -----------------------------------------------------------------------------
names(lmfit.full)
lmfit.full$residuals # e
names(summary(lmfit.full))
## -----------------------------------------------------------------------------
names(lmfit.full)
lmfit.full$fitted.values
predict(lmfit.full) # y.hat; or use [lmfit.full$fitted.values]
## -----------------------------------------------------------------------------
lmfit.full <- lm(time ~ case + distance, data=deliver)
lmfit.reduced <- lm(time ~ case, data=deliver)
anova(lmfit.reduced, lmfit.full) # is distance significant?
rocket <- read.csv("rocket.csv")
rocket
fit1 <- lm(y ~ x+I(x^2), data = rocket)
summary(fit1)
model.matrix(fit1)
model.matrix(fit1) |> apply(2, \col sum(col^2))
model.matrix(fit1) |> apply(2, \(col) sum(col^2))
98.95703/24
fit2 <- lm(y~I(x-mean(x))+I((x-mean(x))^2))
fit2 <- lm(y~I(x-mean(x))+I((x-mean(x))^2), data = rocket)
summary(fit2)
model.matrix(fit2) |> apply(2, \(col) sum(col^2))
hardwood <- read.csv("hardwood.csv")
lmfit1 <- lm(strength ~ hardwood, data=hardwood)
lmfit2 <- lm(strength ~ hardwood + I(hardwood^2), data=hardwood)
lmfit3 <- lm(strength ~ hardwood + I(hardwood^2) + I(hardwood^3), data=hardwood)
lmfit4 <- lm(strength ~ hardwood + I(hardwood^2) + I(hardwood^3) + I(hardwood^4), data=hardwood)
lmfit5 <- lm(strength ~ poly(hardwood, 4, raw = TRUE), data=hardwood)
lmfit6 <- lm(strength ~ poly(hardwood, 4), data=hardwood)
# model.matrix(lmfit4) # matrix X
# model.matrix(lmfit5)
# model.matrix(lmfit6)
model.matrix(lmfit6) |> apply(2, \(col) sum(col^2))
# model.matrix(lmfit4) # matrix X
# model.matrix(lmfit5)
# model.matrix(lmfit6)
model.matrix(lmfit6) |> apply(2, \(col) sum(col^2))
vif(fit1)
library(car)
install.packages("car")
car::vif(fit1)
car::vif(fit2)
fit2 <- lm(y~I(x-mean(x))+I((x-mean(x))^2), data = rocket)
model.matrix(fit2) |> apply(2, \(col) sum(col^2))
model.matrix(fit1) |> apply(1, \(col) sum(col^2))
model.matrix(fit2) |> apply(1, \(col) sum(col^2))
model.matrix(fit2) |> apply(2, \(col) sum(col^2))
model.matrix(fit1) |> apply(2, \(col) sum(col^2))
car::vif(fit1)
car::vif(fit2)
summary(lm.fit)
summary(fit1)
summary(fit1)$r.sqruared
summary(fit1)$r.squared
fit11 <- lm(y ~ I(x^2), data = rocket)
summary(fit1)$r.squared
fit11 <- lm(y ~ I(x^2), data = rocket)
summary(fit11)$r.squared
1/(1-summary(fit11)$r.squared)
fit11 <- lm(y ~ x, data = rocket)
1/(1-summary(fit12)$r.squared)
fit12 <- lm(y ~ x, data = rocket)
1/(1-summary(fit12)$r.squared)
fit1 <- lm(y~x+I(x^2), data = rocket)
car::vif(fit1)
fit11 <- lm(y ~ I(x^2), data = rocket)
1/(1-summary(fit11)$r.squared)
fit12 <- lm(y ~ x, data = rocket)
1/(1-summary(fit12)$r.squared)
car::vif(fit1)
1/(1-summary(fit1)$r.squared)
fit1 <- lm(y ~ x+I(x^2), data = rocket)
1/(1-summary(fit1)$r.squared)
summary(fit11)
1/(1-summary(fit11)$r.squared)
1/(1-summary(fit12)$r.squared)
1/(1-summary(fit1)$r.squared)
summary(fit11)
summary(fit1)
summary(fit12)
fit12 <- lm(y ~ 1+ x, data = rocket)
fit11 <- lm(y ~ 1 + I(x^2), data = rocket)
summary(fit12)
1/(1-summary(fit11)$r.squared)
1/(1-summary(fit12)$r.squared)
fit2 <- lm(y~I(x-mean(x))+I((x-mean(x))^2), data = rocket)
car::vif(fit2)
1/(1-summary(fit2)$r.squared)
fit2 <- lm(y~I(x-mean(x))+I((x-mean(x))^2), data = rocket)
1/(1-summary(fit2)$r.squared)
fit11 <- lm(x ~ I(x^2), data = rocket)
1/(1-summary(fit11)$r.squared)
fit2 <- lm(I(x-mean(x))~I((x-mean(x))^2), data = rocket)
1/(1-summary(fit2)$r.squared)
rocket <- read.csv("rocket.csv")
fit1 <- lm(x ~ I(x^2), data = rocket)
1/(1-summary(fit1)$r.squared)
fit2 <- lm(I(x-mean(x))~I((x-mean(x))^2), data = rocket)
1/(1-summary(fit2)$r.squared)
rocket <- read.csv("rocket.csv")
fit1 <- lm(x ~ I(x^2), data = rocket)
1/(1-summary(fit1)$r.squared)
fit2 <- lm(I(x-mean(x))~I((x-mean(x))^2), data = rocket)
1/(1-summary(fit2)$r.squared)
